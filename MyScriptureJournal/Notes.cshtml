@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "List Notes";

    var db = Database.Open("MyScriptureJournal");
    var selectCommand = "SELECT * FROM MyScriptureJournal";
    var searchTerm = "";

    if (!Request.QueryString["searchBook"].IsEmpty())
    {
        selectCommand = "SELECT * FROM MyScriptureJournal WHERE Book = @0";
        searchTerm = Request.QueryString["searchBook"];
    }

    if (!Request.QueryString["searchNote"].IsEmpty())
    {
        selectCommand = "SELECT * FROM MyScriptureJournal WHERE Note LIKE @0, @1, @2, @3, @4";
        searchTerm = "%" + Request.QueryString["searchNote"] + "%";
    }

    var selectedData = db.Query(selectCommand, searchTerm);
    var grid = new WebGrid(source: selectedData, defaultSort: "Book", rowsPerPage: 5);
}


    <h1>Notes</h1>
    <form method="get">
        <div>
            <label for="searchBook">Book to look for:</label>
            <input type="text" name="searchBook" value="@Request.QueryString["searchBook"]" />
            <input type="Submit" value="Search Book Name" /><br />
            (Leave blank to list all notes.)<br />
        </div>

        <div>
            <label for="SearchNote">Note that contains the following:</label>
            <input type="text" name="searchNotes" value="@Request.QueryString["searchNote"]" />
            <input type="Submit" value="Search keyword in notes" /><br />
        </div>
    </form>

    <div>
        @grid.GetHtml(
                tableStyle: "grid",
                headerStyle: "head",
                alternatingRowStyle: "alt",
                columns: grid.Columns(
                    grid.Column(format: @<a href="~/EditNote?id=@item.ID">Edit</a>),
                    grid.Column("Book"),
                    grid.Column("Chapter"),
                    grid.Column("Verse"),
                    grid.Column("Note"),
                    grid.Column("Date")
                )
            )
    </div>
    <p>
        <a href="~/AddNote">Add a movie</a>
    </p>
